package Model;

import java.util.Vector;

//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : Untitled
//  @ File Name : Model.Place.java
//  @ Date : 2021. 03. 19.
//  @ Author : Mate Simko
//
//


public class Place {

	/**
	 * A Model.Place-en levo entitasokat tarolo lista.
	 */
	protected Vector<Entity> entities;
	/**
	 * A Model.Place szomszedait tarolo lista.
	 */
	protected Vector<Place> neighbours;
	/**
	 * A kapukat tarolo lista
	 */
	protected Vector<Gate> gates;
	/**
	 *	A Model.Place aktivitasat tarolo valtozo
	 */
	protected boolean isActive;

	/**
	 * Konstruktor
	 */
	public Place() {
		gates = new Vector<Gate>();
		entities = new Vector<Entity>();
		neighbours = new Vector<Place>();
		isActive = true;
	}

	/**
	 * Entitas felveteleert felelos fuggveny
	 * @param e Entias
	 */
	public void addEntity(Entity e) {
		Logger.call("Model.Place.addEntity", " Model.Entity = " + e);
		entities.add(e);
		Logger.ret("");
	}

	/**
	 * Entitas torleseert felelos fuggveny
	 * @param e Entias
	 */
	public void removeEntity(Entity e) {
		Logger.call("Model.Place.removeEntity", " Model.Entity = " + e);
		for(int i = 0; i < entities.size(); i++) {
			if(entities.elementAt(i).equals(e)) {
				entities.remove(i);
			}
		}
		Logger.ret("");
	}

	/**
	 * Robbanas fuggveny
	 * Szol az osszes rajta levo entitasnak es szomszednak a robbanasrol
	 */
	public void explode() throws Exception {
		Logger.call("Model.Place.explode", "");
		for(int i = 0; i < entities.size(); i++) {
			entities.elementAt(i).explosionEffect();
		}
		for(int i = 0; i < neighbours.size(); i++) {
			neighbours.elementAt(i).removeNeighbour(this);
		}
		isActive = false;
		Logger.ret("");
	}

	/**
	 * Szomszed felveteleert felelos fuggveny
	 * @param p Szomszed
	 */
	public void addNeighbour(Place p) {
		Logger.call("Model.Place.addNeighbour", " Model.Place = " + p);
		neighbours.add(p);
		Logger.ret("");
	}

	/**
	 * Szomszed torleseert felelos fuggveny
	 * @param p Szomszed
	 */
	public void removeNeighbour(Place p) {
		Logger.call("Model.Place.removeNeighbour", " Model.Place = " + p);
		for(int i = 0; i < neighbours.size(); i++) {
			if(neighbours.elementAt(i).equals(p)) {
				neighbours.remove(i);
			}
		}
		Logger.ret("");
	}

	/**
	 * Kapu felvetele az aszteroidara
	 * @param g Kapu
	 */
	public void addGate(Gate g) {
		Logger.call("Model.Place.addGate ", "Model.Gate = " + g);
		gates.add(g);
		Logger.ret("");
	}

	/**
	 * Kapu eltavolitasa
	 * @param g Kapu
	 */
	public void removeGate(Gate g) {
		Logger.call("Model.Place.removeGate ", "Model.Gate = " + g);
		for(int i = 0; i < gates.size(); i++) {
			if(gates.elementAt(i).equals(g))
				gates.remove(i);
		}
		Logger.ret("");
	}

	/**
	 * A helyen levo kapuk getter-je
	 * @return Kapuk
	 */
	public Vector<Gate> getGates() {
		return gates;
	}

	/**
	 * A kapu isActive attributumanak getter-je
	 * @return Aktivitas
	 */
	 public boolean getIsActive(){
		 return isActive;
	 }

}
